-- User Management Module
-- Version: 1.0
-- Create user_management schema if not exists
CREATE SCHEMA IF NOT EXISTS user_management;

CREATE TABLE user_management.roles
(
    role_id    SERIAL PRIMARY KEY,
    role_name  VARCHAR(50) UNIQUE NOT NULL,
    permission VARCHAR(255)
);

CREATE TABLE user_management.users
(
    user_id         SERIAL PRIMARY KEY,
    username        VARCHAR(50) UNIQUE  NOT NULL,
    email           VARCHAR(100) UNIQUE NOT NULL,
    password_hash   VARCHAR(255)        NOT NULL,
    first_name      VARCHAR(50),
    last_name       VARCHAR(50),
    document_number VARCHAR(20) UNIQUE  NOT NULL,
    phone_number    VARCHAR(20),
    address         VARCHAR(255),
    profile_url     VARCHAR(255),
    enabled         VARCHAR(255),
    non_locked      VARCHAR(255),
    using_mfa       VARCHAR(255),
    is_two_factor_enabled BOOLEAN DEFAULT FALSE,
    created_at      TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user_management.user_roles
(
    user_id INTEGER REFERENCES user_management.users (user_id),
    role_id INTEGER REFERENCES user_management.roles (role_id),
    PRIMARY KEY (user_id, role_id)
);

CREATE SEQUENCE IF NOT EXISTS user_management.roles_role_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS user_management.users_user_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE user_management.activation_codes
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id         INTEGER,
    key             VARCHAR(255),
    expiration_date TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_activation_codes PRIMARY KEY (id)
);

CREATE TABLE user_management.tokens
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id         INTEGER,
    token_type      VARCHAR(255),
    jwt             VARCHAR(255),
    revoked         BOOLEAN                                 NOT NULL,
    expired         BOOLEAN                                 NOT NULL,
    expiration_date TIMESTAMP WITHOUT TIME ZONE,
    creation_date   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_tokens PRIMARY KEY (id)
);

ALTER TABLE user_management.activation_codes
    ADD CONSTRAINT uc_activation_codes_user UNIQUE (user_id);

ALTER TABLE user_management.tokens
    ADD CONSTRAINT uc_tokens_jwt UNIQUE (jwt);

ALTER TABLE user_management.tokens
    ADD CONSTRAINT uc_tokens_user UNIQUE (user_id);

ALTER TABLE user_management.activation_codes
    ADD CONSTRAINT FK_ACTIVATION_CODES_ON_USER FOREIGN KEY (user_id) REFERENCES user_management.users (user_id);

ALTER TABLE user_management.tokens
    ADD CONSTRAINT FK_TOKENS_ON_USER FOREIGN KEY (user_id) REFERENCES user_management.users (user_id);

ALTER TABLE user_management.user_roles
    ADD CONSTRAINT fk_userol_on_role_jpa_entity FOREIGN KEY (role_id) REFERENCES user_management.roles (role_id);

ALTER TABLE user_management.user_roles
    ADD CONSTRAINT fk_userol_on_user_jpa_entity FOREIGN KEY (user_id) REFERENCES user_management.users (user_id);
